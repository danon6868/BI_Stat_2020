library(car)
library(multcomp)
# 1))))
# Пользовательская функция для объединения в таблицу файлов указанного расширения
data_join <- function(directory, extension = 'csv'){
# Именованный вектор с функциями для чтения файлов с различными расширениями
functions <- c(csv = read.csv,
tsv = read.delim,
csv2 = read.csv2,
xls = read_excel,
xlsx = read_excel,
.csv = read.csv,
.tsv = read.delim,
.csv2 = read.csv2,
.xls = read_excel,
.xlsx = read_excel)
df <- data.frame()
for (file in list.files(directory)){
if (endsWith(file, suffix = extension)){
data <- functions[extension][[1]](paste0(directory, file))
df <- rbind(df, data)
}
}
# Сортируем по порядку названий файлов (переменная X)
# Удаляем ее из итоговой таблицы
df <- arrange(df, colnames(df)[1])[, -1]
# В задании написано также объединить файлы в один файл, пусть будет так)
if (!dir.exists(paste0(directory, 'full_out/'))){
dir.create(paste0(directory, 'full_out/'))
}
if (startsWith(extension, prefix = '.')){
write.csv(df, paste0(directory, 'full_out/whole_data', extension))
}
else {
write.csv(df, paste0(directory, 'full_out/whole_data.', extension))
}
return(df)
}
# Объединенные данные
# 2)))
# Проверим, правильно ли все открылось
drug_data <- data_join('Homework/Project_ad_ANOVA/Data/')
str(drug_data)
dim(drug_data)
apply(apply(drug_data, 2, is.na), 2, sum)
# Видим, что есть 10 отсутствующих значений в одной переменной, которая отражает наличие рецидива.
# Я заменю все NA на нули, обосновывая это тем, что, скорее всего, если рецидива и правда не было, врач мог просто забыть
# написать о его отсутствии. А выкидывать 5 % данных при таком небольшом числе наблюдений не хочется.
drug_data$is_relapse[is.na(drug_data$is_relapse)] <-  0
# Сразу видим, что возраст имеет строковый тип, это надо будет исправить
# Также можно привести тип переменной is_relapse в фактор
# Посмотрим, какие вообще типы значений мы имеем по разным переменным:
unique(drug_data$gender)
# Сразу видно, что есть ошибки при сборе данных. Исправляем:
drug_data$gender[drug_data$gender == 'malle'] <- 'male'
unique(drug_data$gender)
drug_data$gender <- as.factor(drug_data$gender)
# Здесь вообще интересно, но что поделать
unique(drug_data$age)
drug_data$age[drug_data$age == 'thirty-one'] <- 31
drug_data$age[drug_data$age == '350'] <- 35
drug_data$age[drug_data$age == '220'] <- 22
drug_data$age <- as.integer(drug_data$age)
unique(drug_data$age)
unique(drug_data$drug_type)
drug_data$drug_type <- as.factor(drug_data$drug_type)
unique(drug_data$is_relapse)
drug_data$is_relapse <- as.factor(drug_data$is_relapse)
dim(drug_data)
str(drug_data)
head(drug_data)
# Теперь данные выглядят хорошо, и их можно использовать для дальнейшего анализа
# EDA
dim(drug_data)
# Всего в данных 200 наблюдений и 6 переменных.
theme_set(theme_bw())
ggplot(drug_data, aes(drug_type, fill = is_relapse)) +
geom_bar() +
ggtitle('Распределение числа пациентов\nпо наличию рецидива и типу лекарства') +
scale_fill_manual(values = c('0' = '#EBECB3',
'1' = '#B3ECDD'),
name = "Рецидив", labels = c('Нет', 'Да')) +
theme(plot.title = element_text(hjust = 0.5)) +
xlab('Тип лекарства') +
ylab('Количество пациентов')
ggplot(drug_data, aes(drug_type, fill = gender)) +
geom_bar() +
ggtitle('Распределение числа пациентов\nпо полу и типу лекарства') +
scale_fill_manual(values = c('female' = '#EBECB3',
'male' = '#B3ECDD'),
name = "Пол", labels = c('Женский', 'Мужской')) +
theme(plot.title = element_text(hjust = 0.5)) +
xlab('Тип лекарства') +
ylab('Количество пациентов')
ggplot(drug_data, aes(x = drug_type, y = days_in_hospital)) +
geom_boxplot(aes(fill = gender)) +
scale_fill_manual(values = c('female' = '#EBECB3',
'male' = '#B3ECDD'),
name = "Пол", labels = c('Женский', 'Мужской')) +
theme(plot.title = element_text(hjust = 0.5)) +
xlab('Тип лекарства') +
ylab('Количество дней в госпитале') +
ggtitle('Распределение числа дней в госпитале\nпо полу и типу лекарства')
# 3)))
hosp_duration_mod <- lm(days_in_hospital ~ gender + drug_type, data = drug_data)
av_hosp_duration_mod <- Anova(mod = hosp_duration_mod)
# Проверим условия применимости
mod_diag <- fortify(hosp_duration_mod)
ggplot(mod_diag, aes(x = drug_type, y = .stdresid)) +
geom_boxplot(aes(fill = gender)) +
scale_fill_manual(values = c('female' = '#EBECB3',
'male' = '#B3ECDD'),
name = "Пол", labels = c('Женский', 'Мужской')) +
theme(plot.title = element_text(hjust = 0.5)) +
xlab('Тип лекарства') +
ylab('Стандартизованные остатки') +
ggtitle('Распределение стандартизованных остатков модели\nпо полу и типу лекарства')
ggplot(mod_diag, aes(x = 1:nrow(mod_diag), y = .cooksd)) +
geom_bar(stat = 'identity')
ggplot(mod_diag, aes(x = 1:nrow(mod_diag), y = .cooksd)) +
geom_bar(stat = 'identity')
ggplot(data = mod_diag, aes(x = .fitted, y = .stdresid)) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth(method = "lm") +
geom_hline(yintercept = 2, color = "red") +
geom_hline(yintercept = -2, color = "red") +
xlab('Предсказанное значение') +
ylab('Стандартизованные остатки')
inter_model <- lm(days_in_hospital ~ gender * drug_type, data = drug_data)
av_inter_model <- Anova(mod = inter_model)
av_inter_model
knitr::opts_chunk$set(echo = T,
include = T,
warning = F)
inter_mod_diag <- fortify(inter_model)
knitr::opts_chunk$set(echo = T,
include = T,
warning = F)
if (!require('dplyr')){
install.packages('dplyr')
}
if (!require('ggplot2')){
install.packages('ggplot2')
}
if (!require('gridExtra')){
install.packages('gridExtra')
}
if (!require('psych')){
install.packages('psych')
}
if (!require('car')){
install.packages('car')
}
if (!require('Hmisc')){
install.packages('Hmisc')
}
if (!require('multcomp')){
install.packages('multcomp')
}
if (!require('readxl')){
install.packages('readxl')
}
library(ggplot2)
library(dplyr)
library(car)
library(Hmisc)
library(multcomp)
library(gridExtra)
library(gridExtra)
library(readxl)
theme_set(theme_bw())
data_join <- function(directory, extension = 'csv'){
# Именованный вектор с функциями для чтения файлов с различными расширениями
functions <- c(csv = read.csv,
tsv = read.delim,
csv2 = read.csv2,
xls = read_excel,
xlsx = read_excel,
.csv = read.csv,
.tsv = read.delim,
.csv2 = read.csv2,
.xls = read_excel,
.xlsx = read_excel)
df <- data.frame()
for (file in list.files(directory)){
if (endsWith(file, suffix = extension)){
data <- functions[extension][[1]](paste0(directory, file))
df <- rbind(df, data)
}
}
# Сортируем по порядку названий файлов (переменная X)
# Удаляем ее из итоговой таблицы
df <- arrange(df, colnames(df)[1])[, -1]
# В задании написано также объединить файлы в один файл, пусть будет так)
if (!dir.exists(paste0(directory, 'full_out/'))){
dir.create(paste0(directory, 'full_out/'))
}
if (startsWith(extension, prefix = '.')){
write.csv(df, paste0(directory, 'full_out/whole_data', extension))
}
else {
write.csv(df, paste0(directory, 'full_out/whole_data.', extension))
}
return(df)
}
drug_data <- data_join('/home/danil/bioinf_institute/statistics/Homework/Project_ad_ANOVA/Data/')
str(drug_data)
dim(drug_data)
apply(apply(drug_data, 2, is.na), 2, sum)
drug_data$is_relapse[is.na(drug_data$is_relapse)] <-  0
apply(drug_data[, -5], 2, unique)
drug_data$gender[drug_data$gender == 'malle'] <- 'male'
drug_data$gender <- as.factor(drug_data$gender)
drug_data$age[drug_data$age == 'thirty-one'] <- 31
drug_data$age[drug_data$age == '350'] <- 35
drug_data$age[drug_data$age == '220'] <- 22
drug_data$age <- as.integer(drug_data$age)
drug_data$drug_type <- as.factor(drug_data$drug_type)
drug_data$is_relapse <- as.factor(drug_data$is_relapse)
drug_data$days_in_hospital <- as.numeric(drug_data$days_in_hospital)
drug_data$сondition <- as.factor(paste(drug_data$gender, drug_data$drug_type, sep = '_'))
dim(drug_data)
str(drug_data)
head(drug_data)
ggplot(drug_data, aes(drug_type, fill = is_relapse)) +
geom_bar() +
ggtitle('Распределение числа пациентов\nпо наличию рецидива и типу лекарства') +
scale_fill_manual(values = c('0' = '#EBECB3',
'1' = '#B3ECDD'),
name = "Рецидив", labels = c('Нет', 'Да')) +
theme(plot.title = element_text(hjust = 0.5)) +
xlab('Тип лекарства') +
ylab('Количество пациентов')
ggplot(drug_data, aes(drug_type, fill = gender)) +
geom_bar() +
ggtitle('Распределение числа пациентов\nпо полу и типу лекарства') +
scale_fill_manual(values = c('female' = '#EBECB3',
'male' = '#B3ECDD'),
name = "Пол", labels = c('Женский', 'Мужской')) +
theme(plot.title = element_text(hjust = 0.5)) +
xlab('Тип лекарства') +
ylab('Количество пациентов')
ggplot(drug_data, aes(x = drug_type, y = days_in_hospital)) +
geom_boxplot(aes(fill = gender)) +
scale_fill_manual(values = c('female' = '#EBECB3',
'male' = '#B3ECDD'),
name = "Пол", labels = c('Женский', 'Мужской')) +
theme(plot.title = element_text(hjust = 0.5)) +
xlab('Тип лекарства') +
ylab('Количество дней в госпитале') +
ggtitle('Распределение числа дней в госпитале\nпо полу и типу лекарства')
hosp_duration_mod <- lm(days_in_hospital ~ gender + drug_type, data = drug_data)
av_hosp_duration_mod <- Anova(mod = hosp_duration_mod)
av_hosp_duration_mod
total <- ggplot(data = drug_data, aes(x = сondition, y = days_in_hospital)) +
geom_linerange(data = drug_data, aes(x = сondition,
ymax = days_in_hospital,
ymin = mean(drug_data$days_in_hospital)),
size = 1,color = "grey",
position = position_jitter(width = 0.1,
seed = 1L)) +
geom_hline(yintercept = mean(drug_data$days_in_hospital)) +
geom_point(position = position_jitter(width = 0.1, seed = 1L)) +
ggtitle("Общая \n изменчивость") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab('Условия') +
ylab('Количество дней в госпитале')
gr_mean <- drug_data %>%
group_by(сondition) %>%
summarise(mean = mean(days_in_hospital))
two_pic <-right_join(x = drug_data, y = gr_mean)
hline <- data.frame(Cond = levels(drug_data$сondition), v = gr_mean$mean)
resid <- ggplot(two_pic, aes(x = сondition, y = days_in_hospital)) +
geom_linerange(aes(x = сondition, ymax = days_in_hospital, ymin = mean),
size = 1, color = "green",
position = position_jitter(width = 0.1, seed = 1L)) +
geom_point(position = position_jitter(width = 0.1, seed = 1L)) +
geom_point(data = hline, aes(Cond, v), shape=95, size=15) +
ggtitle("Случайная \n изменчивость") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab('Условия') +
ylab('Количество дней в госпитале')
factor <- ggplot() +
geom_linerange(data = gr_mean,
aes(x = сondition, ymax = mean, ymin = mean(drug_data$days_in_hospital)),
color = "blue", size = 2) +
geom_point(data = two_pic, aes(x = сondition, y = days_in_hospital),
position = position_jitter(width = 0.1, seed = 1L)) +
geom_point(data = hline, aes(Cond, v), shape=95, size=15) +
geom_hline(yintercept = mean(drug_data$days_in_hospital)) +
ggtitle("Факторная \n изменчивость") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab('Условия') +
ylab('Количество дней в госпитале')
grid.arrange(total, factor, resid, nrow = 1)
mod_diag <- fortify(hosp_duration_mod)
ggplot(mod_diag, aes(x = 1:nrow(mod_diag), y = .cooksd)) +
geom_bar(stat = 'identity')
ggplot(mod_diag, aes(x = drug_type, y = .stdresid)) +
geom_boxplot(aes(fill = gender)) +
scale_fill_manual(values = c('female' = '#EBECB3',
'male' = '#B3ECDD'),
name = "Пол", labels = c('Женский', 'Мужской')) +
theme(plot.title = element_text(hjust = 0.5)) +
xlab('Тип лекарства') +
ylab('Стандартизованные остатки') +
ggtitle('Распределение стандартизованных остатков модели\nпо полу и типу лекарства')
ggplot(data = mod_diag, aes(x = .fitted, y = .stdresid)) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth(method = "lm") +
geom_hline(yintercept = 2, color = "red") +
geom_hline(yintercept = -2, color = "red") +
xlab('Предсказанное значение') +
ylab('Стандартизованные остатки')
qqPlot(hosp_duration_mod)
shapiro.test(mod_diag$.resid)
inter_model <- lm(days_in_hospital ~ gender * drug_type, data = drug_data)
av_inter_model <- Anova(mod = inter_model)
av_inter_model
inter_mod_diag <- fortify(inter_model)
ggplot(inter_mod_diag, aes(x = 1:nrow(mod_diag), y = .cooksd)) +
geom_bar(stat = 'identity')
ggplot(inter_mod_diag, aes(x = drug_type, y = .stdresid)) +
geom_boxplot(aes(fill = gender)) +
scale_fill_manual(values = c('female' = '#EBECB3',
'male' = '#B3ECDD'),
name = "Пол", labels = c('Женский', 'Мужской')) +
theme(plot.title = element_text(hjust = 0.5)) +
xlab('Тип лекарства') +
ylab('Стандартизованные остатки') +
ggtitle('Распределение стандартизованных остатков модели\nпо полу и типу лекарства\n(модель со взаимодействием предикторов)')
qqPlot(inter_model)
shapiro.test(inter_mod_diag$.resid)
ggplot(data = inter_mod_diag, aes(x = .fitted, y = .stdresid)) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth(method = "lm") +
geom_hline(yintercept = 2, color = "red") +
geom_hline(yintercept = -2, color = "red") +
xlab('Предсказанное значение') +
ylab('Стандартизованные остатки')
av_inter_model
av_inter_model
av_inter_model$`F value`
av_inter_model$`F value`
av_inter_model$`Pr(>F)`
av_inter_model$Df
av_inter_model$Df
av_inter_model$`F value`[3]
av_inter_model$Df
r av_inter_model$Df[4]
av_inter_model$Df
av_inter_model$Df[4]
av_inter_model
drug_data$Condition <- as.factor(paste(drug_data$gender, drug_data$drug_type, sep = '_'))
inter_fit <- lm(days_in_hospital ~ Condition - 1, data = drug_data)
res_tukey <- glht(inter_fit, linfct = mcp(Condition = 'Tukey'))
summary(res_tukey)
data = expand.grid(gender = levels(drug_data$gender),
drug_type = levels(drug_data$drug_type))
data
data <-  expand.grid(gender = levels(drug_data$gender),
drug_type = levels(drug_data$drug_type))
data <- data.frame(data,
predict(inter_model, newdata = data, interval = 'confidence'))
pos <- position_dodge(width = 0.2)
gg_linep <- ggplot(data, aes(x = drug_type, y = fit,
ymin = lwr, ymax = upr,
color = gender)) +
geom_point(position = pos) +
geom_errorbar(position = pos, width =0.2 )
gg_linep
data$fit
data
ggplot(mod_diag, aes(x = 1:nrow(mod_diag), y = .cooksd)) +
geom_bar(stat = 'identity') +
xlab('Номер наблюдения') +
ylab('Расстояние Кука') +
ggtitle('График расстояний Кука')
ggplot(mod_diag, aes(x = 1:nrow(mod_diag), y = .cooksd)) +
geom_bar(stat = 'identity') +
xlab('Номер наблюдения') +
ylab('Расстояние Кука') +
ggtitle('График расстояний Кука') +
theme(plot.title = element_text(hjust = 0.5))
total <- ggplot(data = drug_data, aes(x = сondition, y = days_in_hospital)) +
geom_linerange(data = drug_data, aes(x = сondition,
ymax = days_in_hospital,
ymin = mean(drug_data$days_in_hospital)),
size = 1,color = "grey",
position = position_jitter(width = 0.1,
seed = 1L)) +
geom_hline(yintercept = mean(drug_data$days_in_hospital)) +
geom_point(position = position_jitter(width = 0.1, seed = 1L)) +
ggtitle("Общая \n изменчивость") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab('Условия') +
ylab('Количество дней в госпитале')
gr_mean <- drug_data %>%
group_by(сondition) %>%
summarise(mean = mean(days_in_hospital))
two_pic <-right_join(x = drug_data, y = gr_mean)
hline <- data.frame(Cond = levels(drug_data$сondition), v = gr_mean$mean)
resid <- ggplot(two_pic, aes(x = сondition, y = days_in_hospital)) +
geom_linerange(aes(x = сondition, ymax = days_in_hospital, ymin = mean),
size = 1, color = "green",
position = position_jitter(width = 0.1, seed = 1L)) +
geom_point(position = position_jitter(width = 0.1, seed = 1L)) +
geom_point(data = hline, aes(Cond, v), shape=95, size=15) +
ggtitle("Случайная \n изменчивость") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab('Условия') +
ylab('Количество дней в госпитале')
factor <- ggplot() +
geom_linerange(data = gr_mean,
aes(x = сondition, ymax = mean, ymin = mean(drug_data$days_in_hospital)),
color = "blue", size = 2) +
geom_point(data = two_pic, aes(x = сondition, y = days_in_hospital),
position = position_jitter(width = 0.1, seed = 1L)) +
geom_point(data = hline, aes(Cond, v), shape=95, size=15) +
geom_hline(yintercept = mean(drug_data$days_in_hospital)) +
ggtitle("Факторная \n изменчивость") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab('Условия') +
ylab('Количество дней в госпитале')
grid.arrange(total, factor, resid, nrow = 1) +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = mod_diag, aes(x = .fitted, y = .stdresid)) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth(method = "lm") +
geom_hline(yintercept = 2, color = "red") +
geom_hline(yintercept = -2, color = "red") +
xlab('Предсказанное значение') +
ylab('Стандартизованные остатки') +
ggtitle('График зависимости остатков модели\nот предсказанного значения') +
theme(plot.title = element_text(hjust = 0.5))
qqPlot(hosp_duration_mod) +
ggtitle('fdsfsdf')
qqPlot(hosp_duration_mod)
shapiro.test(mod_diag$.resid)
?qqPlot
data <-  expand.grid(gender = levels(drug_data$gender),
drug_type = levels(drug_data$drug_type))
data <- data.frame(data,
predict(inter_model, newdata = data, interval = 'confidence'))
pos <- position_dodge(width = 0.2)
gg_linep <- ggplot(data, aes(x = drug_type, y = fit,
ymin = lwr, ymax = upr,
color = gender)) +
geom_point(position = pos) +
geom_errorbar(position = pos, width = 0.2) +
scale_fill_manual(values = c('female' = '#EBECB3',
'male' = '#B3ECDD'),
name = "Пол", labels = c('Женский', 'Мужской')) +
theme(plot.title = element_text(hjust = 0.5)) +
xlab('Тип лекарства') +
ylab('Предсказанное среднее значение') +
ggtitle('Зависимость предсказанного среднего количества дней в госпитале\nот пола и типа лекарства')
gg_linep
data <-  expand.grid(gender = levels(drug_data$gender),
drug_type = levels(drug_data$drug_type))
data <- data.frame(data,
predict(inter_model, newdata = data, interval = 'confidence'))
pos <- position_dodge(width = 0.2)
gg_linep <- ggplot(data, aes(x = drug_type, y = fit,
ymin = lwr, ymax = upr,
color = gender)) +
geom_point(position = pos) +
geom_errorbar(position = pos, width = 0.2) +
scale_color_manual <- (values = c('female' = '#EBECB3',
'male' = '#B3ECDD'),
data <-  expand.grid(gender = levels(drug_data$gender),
drug_type = levels(drug_data$drug_type))
data <- data.frame(data,
predict(inter_model, newdata = data, interval = 'confidence'))
pos <- position_dodge(width = 0.2)
gg_linep <- ggplot(data, aes(x = drug_type, y = fit,
ymin = lwr, ymax = upr,
color = gender)) +
geom_point(position = pos) +
geom_errorbar(position = pos, width = 0.2) +
scale_color_manual(values = c('female' = '#EBECB3',
'male' = '#B3ECDD'),
name = "Пол", labels = c('Женский', 'Мужской')) +
theme(plot.title = element_text(hjust = 0.5)) +
xlab('Тип лекарства') +
ylab('Предсказанное среднее значение') +
ggtitle('Зависимость предсказанного среднего количества дней в госпитале\nот пола и типа лекарства')
gg_linep
data <-  expand.grid(gender = levels(drug_data$gender),
drug_type = levels(drug_data$drug_type))
data <- data.frame(data,
predict(inter_model, newdata = data, interval = 'confidence'))
pos <- position_dodge(width = 0.2)
gg_linep <- ggplot(data, aes(x = drug_type, y = fit,
ymin = lwr, ymax = upr,
color = gender)) +
geom_point(position = pos) +
geom_errorbar(position = pos, width = 0.2) +
scale_color_manual(values = c('female' = 'red',
'male' = 'blue'),
name = "Пол", labels = c('Женский', 'Мужской')) +
theme(plot.title = element_text(hjust = 0.5)) +
xlab('Тип лекарства') +
ylab('Предсказанное среднее значение') +
ggtitle('Зависимость предсказанного среднего количества дней в госпитале\nот пола и типа лекарства')
gg_linep
setwd('projects/project_1/')
setwd('../../Homework/Project_1_mollusca/Data/')
