df <- as.matrix(t(mouse_data_wo_na[, -c(1, 79:83)]))
df
cond <- data.frame(row.names = mouse_data_wo_na$MouseID, condition = mouse_data_wo_na$Behavior)
dds <- DESeqDataSetFromMatrix(countData = as.matrix(df), colData = cond, design = ~ condition)
any(as.matrix(df))
any(as.matrix(df))
any(as.matrix(df) < 0)
df
df <- data.frame(t(mouse_data_wo_na[, -c(1, 79:83)]))
df
df <- data.frame(t(mouse_data_wo_na[, -c(1, 79:83)]))
names(df) <- mouse_data_wo_na$MouseID
cond <- data.frame(row.names = mouse_data_wo_na$MouseID, condition = mouse_data_wo_na$Behavior)
#ds <- DESeqDataSetFromMatrix(countData = as.matrix(df), colData = cond, design = ~ condition)
df
df <- data.frame(t(mouse_data_wo_na[, -c(1, 79:83)]))
names(df) <- mouse_data_wo_na$MouseID
cond <- data.frame(row.names = mouse_data_wo_na$MouseID, condition = mouse_data_wo_na$Behavior)
#ds <- DESeqDataSetFromMatrix(countData = as.matrix(df), colData = cond, design = ~ condition)
df <- data.frame(t(mouse_data_wo_na[, -c(1, 79:83)]))
names(df) <- mouse_data_wo_na$MouseID
cond <- data.frame(row.names = mouse_data_wo_na$MouseID, condition = mouse_data_wo_na$Behavior)
df > 0
d <- df > 0
d
d[1]
d[1, 1]
d[1, 2]
d <- df < 0
d
t(d)
apply(t(d), 2, sum)
df <- data.frame(t(mouse_wo_reps)[, -c(1, 79:83)]))
df <- data.frame(t(mouse_wo_reps)[, -c(1, 79:83)])
df
names(df) <- mouse_data_wo_na$MouseID
names(df) <- mouse_wo_reps$id
df
str(df)
df <- data.frame(t(mouse_wo_reps))
df
str(df)
mouse_wo_reps
df <- data.frame(t(mouse_wo_reps[, -c(1, 79:82)]))
df
str(df)
names(df) <- mouse_wo_reps$id
str(df)
df
cond <- data.frame(row.names = mouse_wo_reps$id, condition = mouse_wo_reps$Behavior)
cond
ds <- DESeqDataSetFromMatrix(countData = as.matrix(df), colData = cond, design = ~ condition)
str(df)
df <- df %>% mutate_all(df, as.integer)
df <- df %>% mutate_all(as.integer)
df
ds <- DESeqDataSetFromMatrix(countData = as.matrix(df), colData = cond, design = ~ condition)
BiocManager::install('limma')
BiocManager::install('leukemiasEset')
library(leukemiasEset)
library(leukemiasEset)
library(limma)
data(leukemiasEset)
leukemiasEset
table(leukemiasEset$LeukemiaType)
leukemiasEset$Tissue
leukemiasEset$Project
leukemiasEset$LeukemiaTypeFullName
leukemiasEset[, leukemiasEset$LeukemiaType %in% c("ALL", "NoL")]
ourData <- leukemiasEset[, leukemiasEset$LeukemiaType %in% c("ALL", "NoL")]
ourData$LeukemiaType <- factor(ourData$LeukemiaType)
ourData
ourData$Project
ourData$Tissue
ourData$LeukemiaType
ourData$LeukemiaTypeFullName
ourData$Subtype
design <- model.matrix(~ ourData$LeukemiaType)
fit <- lmFit(ourData, design)
fit <- eBayes(fit)
topTable(fit)
data(leukemiasEset)
leukemiasEset
leukemiasEset[1]
leukemiasEset[1,1]
leukemiasEset$assayData
sizeFactors()
sizeFactors(df)
cond
design <- model.matrix(~ cond)
ourData$LeukemiaType
list(cond)
list(cond)[[1]]
mouse_wo_reps$Behavior
design <- model.matrix(~ mouse_wo_reps$Behavior)
design
df
fit <- lmFit(df, design)
fit <- eBayes(fit)
topTable(fit)
df <- data.frame(t(mouse_wo_reps[, -c(1, 79:82)]))
fit <- lmFit(df, design)
fit <- eBayes(fit)
topTable(fit)
fit
fit$pivot
fit$F.p.value
df
topTable(fit)
summary(fit)
fit
fit$sigma
fit$df.total
fit$assign
fit$stdev.unscaled
fit$coefficients
fit$rank
fit$design
fit$F.p.value
fit$F
fit$lods
fit$p.value
topTable(fit = )
topTable(fit)
fit$t
topTable(fit)
topTable(fit, n = ncol(df))
if (!require('limma')){
BiocManager::install("limma")
}
e
df
df_n <- df %>% mutate_all(as.integer)
ds <- DESeqDataSetFromMatrix(countData = as.matrix(df), colData = cond, design = ~ condition)
df
ds <- DESeqDataSetFromMatrix(countData = as.matrix(df_n), colData = cond, design = ~ condition)
ds
ds <- DESeq(ds)
mouse_transposed <- data.frame(t(mouse_wo_reps[, -c(1, 79:82)]))
cond <- data.frame(row.names = mouse_wo_reps$id, condition = mouse_wo_reps$Behavior)
design <- model.matrix(~ mouse_wo_reps$Behavior)
mouse_fit <- lmFit(mouse_transposed, design)
mouse_fit <- eBayes(mouse_fit)
topTable(fit, n = ncol(mouse_transposed))
de_result <- topTable(mouse_fit, n = ncol(mouse_transposed))
row.names(de_result)
write(row.names(de_result), file = 'proteins.txt')
de_result
row.names(de_result)
make_id(row.names(de_result))
row.names(de_result)
de_result
de_result <- topTable(mouse_fit, n = 77)
de_result
make_id(row.names(de_result))
write(make_id(row.names(de_result)), file = 'proteins.txt')
?write
write(t(make_id(row.names(de_result))), file = 'proteins.txt')
topTable(mouse_beh_fit, n = 77)
mouse_transposed <- data.frame(t(mouse_wo_reps[, -c(1, 79:82)]))
design_beh <- model.matrix(~ mouse_wo_reps$Behavior)
design_treat <- model.matrix(~ mouse_wo_reps$Treatment)
design_gt <- model.matrix(~ mouse_wo_reps$Genotype)
mouse_beh_fit <- lmFit(mouse_transposed, design_beh)
mouse_treat_fit <- lmFit(mouse_transposed, design_treat)
mouse_gt_fit <- lmFit(mouse_transposed, design_gt)
mouse_beh_fit <- eBayes(mouse_beh_fit)
mouse_treat_fit <- eBayes(mouse_treat_fit)
mouse_gt_fit <- eBayes(mouse_gt_fit)
topTable(mouse_beh_fit, n = 77)
topTable(mouse_beh_fit, n = 77)
de_beh_result <- topTable(mouse_beh_fit, n = 77) %>% select(adj.P.Val <= 0.05)
select(topTable(mouse_beh_fit, n = 77) , adj.P.Val <= 0.05)
a <- topTable(mouse_beh_fit, n = 77)
a
select(a, adj.P.Val <= 0.05)
select(a, 'adj.P.Val' <= 0.05)
gene_beh_list <- topTable(mouse_beh_fit, n = 77)
gene_treat_list <- topTable(mouse_treat_fit, n = 77)
gene_gt_list <- topTable(mouse_gt_fit, n = 77)
gene_beh_list$adj.P.Val
dplyr::select(gene_beh_list, adj.P.Val)
de_beh_result <- dplyr::select(gene_beh_list, adj.P.Val <= 0.05)
de_beh_result <- dplyr::select(gene_beh_list, adj.P.Val)
de_beh_result
de_beh_result <- dplyr::filter(gene_beh_list, adj.P.Val > 0.05)
de_beh_result
de_beh_result <- dplyr::filter(gene_beh_list, adj.P.Val <= 0.05)
de_beh_result
gene_beh_list
de_beh_result <- dplyr::filter(gene_beh_list, adj.P.Val <= 0.05)$adj.P.Val
de_beh_result
de_beh_result <- filter(gene_beh_list, adj.P.Val <= 0.05)$adj.P.Val
de_beh_result
de_beh_result <- filter(gene_beh_list, adj.P.Val <= 0.05)$adj.P.Val
de_beh_result <- filter(gene_treat_list, adj.P.Val <= 0.05)$adj.P.Val
de_beh_result <- filter(gene_gt_list, adj.P.Val <= 0.05)$adj.P.Val
de_beh_result
de_beh_result <- filter(gene_beh_list, adj.P.Val <= 0.05)
de_beh_result
de_beh_result <- filter(gene_treat_list, adj.P.Val <= 0.05)
de_beh_result <- filter(gene_gt_list, adj.P.Val <= 0.05)
de_beh_result
de_beh_result <- filter(gene_beh_list, adj.P.Val <= 0.05)
de_treat_result <- filter(gene_treat_list, adj.P.Val <= 0.05)
de_gt_result <- filter(gene_gt_list, adj.P.Val <= 0.05)
de_beh_result
de_treat_result
de_gt_result
knitr::opts_chunk$set(echo = F,
include = T,
warning = F)
mouse_transposed <- data.frame(t(mouse_wo_reps[, -c(1, 79:82)]))
design_beh <- model.matrix(~ mouse_wo_reps$Behavior)
design_treat <- model.matrix(~ mouse_wo_reps$Treatment)
design_gt <- model.matrix(~ mouse_wo_reps$Genotype)
mouse_beh_fit <- lmFit(mouse_transposed, design_beh)
mouse_treat_fit <- lmFit(mouse_transposed, design_treat)
mouse_gt_fit <- lmFit(mouse_transposed, design_gt)
mouse_beh_fit <- eBayes(mouse_beh_fit)
mouse_treat_fit <- eBayes(mouse_treat_fit)
mouse_gt_fit <- eBayes(mouse_gt_fit)
gene_beh_list <- topTable(mouse_beh_fit, n = 77)
gene_treat_list <- topTable(mouse_treat_fit, n = 77)
gene_gt_list <- topTable(mouse_gt_fit, n = 77)
de_beh_result <- filter(gene_beh_list, adj.P.Val <= 0.05)
de_treat_result <- filter(gene_treat_list, adj.P.Val <= 0.05)
de_gt_result <- filter(gene_gt_list, adj.P.Val <= 0.05)
de_beh_result
de_treat_result
de_gt_result
knitr::opts_chunk$set(echo = F,
include = T,
warning = F)
knitr::knit_hooks$set(webgl = hook_webgl)
if (!require(rgl)){
install.packages("rgl")
}
knitr::opts_chunk$set(echo = F,
include = T,
warning = F)
library(rgl)
knitr::knit_hooks$set(webgl = hook_webgl)
knitr::opts_chunk$set(echo = F,
include = T,
warning = F)
library(rgl)
knitr::knit_hooks$set(webgl = hook_webgl)
df_scores
mouse_transposed <- data.frame(t(mouse_wo_reps[, -c(1, 79:82)]))
design_beh <- model.matrix(~ mouse_wo_reps$Behavior)
design_treat <- model.matrix(~ mouse_wo_reps$Treatment)
design_gt <- model.matrix(~ mouse_wo_reps$Genotype)
mouse_beh_fit <- lmFit(mouse_transposed, design_beh)
mouse_treat_fit <- lmFit(mouse_transposed, design_treat)
mouse_gt_fit <- lmFit(mouse_transposed, design_gt)
mouse_beh_fit <- eBayes(mouse_beh_fit)
mouse_treat_fit <- eBayes(mouse_treat_fit)
mouse_gt_fit <- eBayes(mouse_gt_fit)
gene_beh_list <- topTable(mouse_beh_fit, n = 77)
gene_treat_list <- topTable(mouse_treat_fit, n = 77)
gene_gt_list <- topTable(mouse_gt_fit, n = 77)
de_beh_result <- filter(gene_beh_list, adj.P.Val <= 0.05)
de_treat_result <- filter(gene_treat_list, adj.P.Val <= 0.05)
de_gt_result <- filter(gene_gt_list, adj.P.Val <= 0.05)
data.frame()
de_beh_result
de_treat_result
de_gt_result
# I got weird graphics effects when I tried to create legend using rgl::legend3d function
par(mar=c(0,0,0,0))
mycolors <- cb_palete
# I got weird graphics effects when I tried to create legend using rgl::legend3d function
par(mar=c(0,0,0,0))
mycolors <- c('red', 'blue')
df_scores$color <- mycolors[as.numeric(df_scores$Behavior) ]
plot3d(
x=df_scores$PC1, df_scores$PC2, df_scores$PC3,
col = df_scores$color,
type = "s",
radius = .05,
xlab="PC1", ylab="PC2", zlab="PC3", main = "Observations colored by mice class")
df_scores
# I got weird graphics effects when I tried to create legend using rgl::legend3d function
par(mar=c(0,0,0,0))
mycolors <- c('red', 'blue')
df_scores$color <- mycolors[as.numeric(df_scores$Behavior) ]
plot3d(
x=df_scores$PC1, df_scores$PC2, df_scores$PC3,
col = df_scores$color,
type = "s",
radius = .05,
xlab="PC1", ylab="PC2", zlab="PC3", main = "Observations colored by mice class")
# I got weird graphics effects when I tried to create legend using rgl::legend3d function
par(mar=c(0,0,0,0))
mycolors <- c('red', 'blue')
df_scores$color <- mycolors[as.numeric(df_scores$Behavior) ]
plot3d(
x=df_scores$PC1, df_scores$PC2, df_scores$PC3,
col = df_scores$color,
type = "s",
radius = .05,
xlab="PC1", ylab="PC2", zlab="PC3", main = "Observations colored by mice class")
plot3d(
x=df_scores$PC1, df_scores$PC2, df_scores$PC3,
col = df_scores$color,
type = "s",
radius = .05,
xlab="PC1", ylab="PC2", zlab="PC3", main = "Observations colored by mice class")
# I got weird graphics effects when I tried to create legend using rgl::legend3d function
par(mar=c(0,0,0,0))
mycolors <- c('red', 'blue')
df_scores$color <- mycolors[as.numeric(df_scores$Behavior) ]
plot3d(
x=df_scores$PC1, df_scores$PC2, df_scores$PC3,
col = df_scores$color,
type = "s",
radius = .05,
xlab="PC1", ylab="PC2", zlab="PC3", main = "Observations colored by mice class")
knitr::knit_hooks$set(webgl = hook_webgl)
# I got weird graphics effects when I tried to create legend using rgl::legend3d function
par(mar=c(0,0,0,0))
mycolors <- c('red', 'blue')
df_scores$color <- mycolors[as.numeric(df_scores$Behavior) ]
plot3d(
x=df_scores$PC1, df_scores$PC2, df_scores$PC3,
col = df_scores$color,
type = "s",
radius = .05,
xlab="PC1", ylab="PC2", zlab="PC3", main = "Observations colored by mice class")
str_split(mice_data$MouseID, "_")
# I got weird graphics effects when I tried to create legend using rgl::legend3d function
par(mar=c(0,0,0,0))
mycolors <- c('red', 'blue')
df_scores$color <- mycolors[as.numeric(df_scores$Behavior) ]
plot3d(
x=df_scores$PC1, df_scores$PC2, df_scores$PC3,
col = df_scores$color,
type = "s",
radius = .05,
xlab="PC1", ylab="PC2", zlab="PC3", main = "Observations colored by mice class")
# I got weird graphics effects when I tried to create legend using rgl::legend3d function
par(mar=c(0,0,0,0))
mycolors <- c('red', 'blue')
df_scores$color <- mycolors[as.numeric(df_scores$Behavior) ]
plot3d(
x=df_scores$PC1, df_scores$PC2, df_scores$PC3,
col = df_scores$color,
type = "s",
radius = .05,
xlab="PC1", ylab="PC2", zlab="PC3", main = "Observations colored by mice class")
if (!require(readxl)) {install.packages("readxl")}
if (!require(tidyverse)) {install.packages("tidyverse")}
if (!require(car)) {install.packages("car")}
if (!require(multcomp)) {install.packages("multcomp")}
if (!require(gridExtra)) {install.packages("gridExtra")}
if (!require(vegan)) {install.packages("vegan")}
if (!require(rgl)) {install.packages("rgl")}
if (!require(stringr)) {install.packages("stringr")}
if (!require(purrr)) {install.packages("purrr")}
knitr::knit_hooks$set(webgl = hook_webgl)
install.packages("tidyverse")
mouse_transposed <- data.frame(t(mouse_wo_reps[, -c(1, 79:82)]))
design_beh <- model.matrix(~ mouse_wo_reps$Behavior)
design_treat <- model.matrix(~ mouse_wo_reps$Treatment)
design_gt <- model.matrix(~ mouse_wo_reps$Genotype)
mouse_beh_fit <- lmFit(mouse_transposed, design_beh)
mouse_treat_fit <- lmFit(mouse_transposed, design_treat)
mouse_gt_fit <- lmFit(mouse_transposed, design_gt)
mouse_beh_fit <- eBayes(mouse_beh_fit)
mouse_treat_fit <- eBayes(mouse_treat_fit)
mouse_gt_fit <- eBayes(mouse_gt_fit)
gene_beh_list <- topTable(mouse_beh_fit, n = 77)
gene_treat_list <- topTable(mouse_treat_fit, n = 77)
gene_gt_list <- topTable(mouse_gt_fit, n = 77)
de_beh_result <- filter(gene_beh_list, adj.P.Val <= 0.05)
de_treat_result <- filter(gene_treat_list, adj.P.Val <= 0.05)
de_gt_result <- filter(gene_gt_list, adj.P.Val <= 0.05)
data.frame(Variable = c('Behavior', 'Treatment', 'Genotype'),
Number_of_DE_genes = c(ncol(de_beh_result),
ncol(de_treat_result),
ncol(de_gt_result)))
mouse_transposed <- data.frame(t(mouse_wo_reps[, -c(1, 79:82)]))
design_beh <- model.matrix(~ mouse_wo_reps$Behavior)
design_treat <- model.matrix(~ mouse_wo_reps$Treatment)
design_gt <- model.matrix(~ mouse_wo_reps$Genotype)
mouse_beh_fit <- lmFit(mouse_transposed, design_beh)
mouse_treat_fit <- lmFit(mouse_transposed, design_treat)
mouse_gt_fit <- lmFit(mouse_transposed, design_gt)
mouse_beh_fit <- eBayes(mouse_beh_fit)
mouse_treat_fit <- eBayes(mouse_treat_fit)
mouse_gt_fit <- eBayes(mouse_gt_fit)
gene_beh_list <- topTable(mouse_beh_fit, n = 77)
gene_treat_list <- topTable(mouse_treat_fit, n = 77)
gene_gt_list <- topTable(mouse_gt_fit, n = 77)
de_beh_result <- filter(gene_beh_list, adj.P.Val <= 0.05)
de_treat_result <- filter(gene_treat_list, adj.P.Val <= 0.05)
de_gt_result <- filter(gene_gt_list, adj.P.Val <= 0.05)
data.frame(Variable = c('Behavior', 'Treatment', 'Genotype'),
Number_of_DE_genes = c(nrow(de_beh_result),
nrow(de_treat_result),
nrow(de_gt_result)))
de_beh_result <- filter(gene_beh_list, adj.P.Val <= 0.05)
mouse_transposed <- data.frame(t(mouse_wo_reps[, -c(1, 79:82)]))
design_beh <- model.matrix(~ mouse_wo_reps$Behavior)
design_treat <- model.matrix(~ mouse_wo_reps$Treatment)
design_gt <- model.matrix(~ mouse_wo_reps$Genotype)
mouse_beh_fit <- lmFit(mouse_transposed, design_beh)
mouse_treat_fit <- lmFit(mouse_transposed, design_treat)
mouse_gt_fit <- lmFit(mouse_transposed, design_gt)
mouse_beh_fit <- eBayes(mouse_beh_fit)
mouse_treat_fit <- eBayes(mouse_treat_fit)
mouse_gt_fit <- eBayes(mouse_gt_fit)
gene_beh_list <- topTable(mouse_beh_fit, n = 77)
gene_treat_list <- topTable(mouse_treat_fit, n = 77)
gene_gt_list <- topTable(mouse_gt_fit, n = 77)
de_beh_result <- filter(gene_beh_list, adj.P.Val <= 0.05)
de_treat_result <- filter(gene_treat_list, adj.P.Val <= 0.05)
de_gt_result <- filter(gene_gt_list, adj.P.Val <= 0.05)
data.frame(Variable = c('Behavior', 'Treatment', 'Genotype'),
Number_of_DE_genes = c(nrow(de_beh_result),
nrow(de_treat_result),
nrow(de_gt_result)))
ggplot(data = bdnf_mod_diag, aes(x = .fitted, y = .stdresid)) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth(method = "lm") +
geom_hline(yintercept = 2, color = "red") +
geom_hline(yintercept = -2, color = "red") +
xlab('Prediction') +
ylab('Standardized residuals') +
ggtitle('Distribution of standardized residuals of model\nin fitted values') +
theme(plot.title = element_text(hjust = 0.5))
ggplot(bdnf_mod_diag, aes(x = class, y = .stdresid)) +
geom_boxplot() +
theme(plot.title = element_text(hjust = 0.5)) +
xlab('Class') +
ylab('Standardized residuals') +
ggtitle('Distribution of standardized residuals of model\nin class')
grid.arrange(
group_distr_col(class_pivot_count, 'class'),
group_distr_col(behavior_pivot_count, 'Behavior'),
group_distr_col(treat_pivot_count, 'Treatment'),
group_distr_col(genotype_pivot_count, 'Genotype'),
ncol = 2)
grid.arrange(
group_distr_col(class_pivot_count, 'class'),
group_distr_col(behavior_pivot_count, 'Behavior'),
group_distr_col(treat_pivot_count, 'Treatment'),
group_distr_col(genotype_pivot_count, 'Genotype'),
ncol = 2)
grid.arrange(
group_distr_col(class_pivot_count, 'class'),
group_distr_col(behavior_pivot_count, 'Behavior'),
group_distr_col(treat_pivot_count, 'Treatment'),
group_distr_col(genotype_pivot_count, 'Genotype'),
ncol = 2)
erbb_mod <- lm(ERBB4_N ~ ., data = exp_data)
mouse_transposed <- data.frame(t(mouse_wo_reps[, -c(1, 79:82)]))
design_beh <- model.matrix(~ mouse_wo_reps$Behavior)
design_treat <- model.matrix(~ mouse_wo_reps$Treatment)
design_gt <- model.matrix(~ mouse_wo_reps$Genotype)
mouse_beh_fit <- lmFit(mouse_transposed, design_beh)
mouse_treat_fit <- lmFit(mouse_transposed, design_treat)
mouse_gt_fit <- lmFit(mouse_transposed, design_gt)
mouse_beh_fit <- eBayes(mouse_beh_fit)
mouse_treat_fit <- eBayes(mouse_treat_fit)
mouse_gt_fit <- eBayes(mouse_gt_fit)
gene_beh_list <- topTable(mouse_beh_fit, n = 77)
gene_treat_list <- topTable(mouse_treat_fit, n = 77)
gene_gt_list <- topTable(mouse_gt_fit, n = 77)
de_beh_result <- filter(gene_beh_list, adj.P.Val <= 0.05)
de_treat_result <- filter(gene_treat_list, adj.P.Val <= 0.05)
de_gt_result <- filter(gene_gt_list, adj.P.Val <= 0.05)
data.frame(Variable = c('Behavior', 'Treatment', 'Genotype'),
Number_of_DE_genes = c(nrow(de_beh_result),
nrow(de_treat_result),
nrow(de_gt_result)))
mouse_transposed <- data.frame(t(mouse_wo_reps[, -c(1, 79:82)]))
design_beh <- model.matrix(~ mouse_wo_reps$Behavior)
design_treat <- model.matrix(~ mouse_wo_reps$Treatment)
design_gt <- model.matrix(~ mouse_wo_reps$Genotype)
mouse_beh_fit <- lmFit(mouse_transposed, design_beh)
mouse_treat_fit <- lmFit(mouse_transposed, design_treat)
mouse_gt_fit <- lmFit(mouse_transposed, design_gt)
mouse_beh_fit <- eBayes(mouse_beh_fit)
mouse_treat_fit <- eBayes(mouse_treat_fit)
mouse_gt_fit <- eBayes(mouse_gt_fit)
gene_beh_list <- topTable(mouse_beh_fit, n = 77)
gene_treat_list <- topTable(mouse_treat_fit, n = 77)
gene_gt_list <- topTable(mouse_gt_fit, n = 77)
de_beh_result <- filter(gene_beh_list, adj.P.Val <= 0.05)
de_treat_result <- filter(gene_treat_list, adj.P.Val <= 0.05)
de_gt_result <- filter(gene_gt_list, adj.P.Val <= 0.05)
data.frame(Variable = c('Behavior', 'Treatment', 'Genotype'),
Number_of_DE_genes = c(nrow(de_beh_result),
nrow(de_treat_result),
nrow(de_gt_result)))
de_beh_result
make_id(row.names(de_beh_result))
write(make_id(row.names(de_beh_result)), file = 'proteins.txt')
write(make_id(row.names(de_beh_result)), file = 'proteins1.txt')
write(make_id(row.names(de_beh_result)), file = 'proteins1.txt')
getwd()
setwd('/home/danil/bioinf_institute/statistics/projects/BI_Stat_2020/project_mouse/')
write(make_id(row.names(de_beh_result)), file = 'proteins1.txt')
grid.arrange(
group_distr_col(class_pivot_count, 'class'),
group_distr_col(behavior_pivot_count, 'Behavior'),
group_distr_col(treat_pivot_count, 'Treatment'),
group_distr_col(genotype_pivot_count, 'Genotype'),
ncol = 2)
