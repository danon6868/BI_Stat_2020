geom_linerange(data = gr_mean,
aes(x = сondition, ymax = mean, ymin = mean(drug_data$days_in_hospital)),
color = "blue", size = 2) +
geom_point(data = two_pic, aes(x = сondition, y = days_in_hospital),
position = position_jitter(width = 0.1, seed = 1L)) +
geom_point(data = hline, aes(Cond, v), shape=95, size=15) +
geom_hline(yintercept = mean(drug_data$days_in_hospital)) +
ggtitle("Факторная \n изменчивость") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab('Условия') +
ylab('Количество дней в госпитале')
grid.arrange(total, factor, resid, nrow = 1)
mod_diag <- fortify(hosp_duration_mod)
ggplot(mod_diag, aes(x = 1:nrow(mod_diag), y = .cooksd)) +
geom_bar(stat = 'identity')
ggplot(mod_diag, aes(x = drug_type, y = .stdresid)) +
geom_boxplot(aes(fill = gender)) +
scale_fill_manual(values = c('female' = '#EBECB3',
'male' = '#B3ECDD'),
name = "Пол", labels = c('Женский', 'Мужской')) +
theme(plot.title = element_text(hjust = 0.5)) +
xlab('Тип лекарства') +
ylab('Стандартизованные остатки') +
ggtitle('Распределение стандартизованных остатков модели\nпо полу и типу лекарства')
ggplot(data = mod_diag, aes(x = .fitted, y = .stdresid)) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth(method = "lm") +
geom_hline(yintercept = 2, color = "red") +
geom_hline(yintercept = -2, color = "red") +
xlab('Предсказанное значение') +
ylab('Стандартизованные остатки')
qqPlot(hosp_duration_mod)
shapiro.test(mod_diag$.resid)
inter_model <- lm(days_in_hospital ~ gender * drug_type, data = drug_data)
av_inter_model <- Anova(mod = inter_model)
av_inter_model
inter_mod_diag <- fortify(inter_model)
ggplot(inter_mod_diag, aes(x = 1:nrow(mod_diag), y = .cooksd)) +
geom_bar(stat = 'identity')
ggplot(inter_mod_diag, aes(x = drug_type, y = .stdresid)) +
geom_boxplot(aes(fill = gender)) +
scale_fill_manual(values = c('female' = '#EBECB3',
'male' = '#B3ECDD'),
name = "Пол", labels = c('Женский', 'Мужской')) +
theme(plot.title = element_text(hjust = 0.5)) +
xlab('Тип лекарства') +
ylab('Стандартизованные остатки') +
ggtitle('Распределение стандартизованных остатков модели\nпо полу и типу лекарства\n(модель со взаимодействием предикторов)')
qqPlot(inter_model)
shapiro.test(inter_mod_diag$.resid)
ggplot(data = inter_mod_diag, aes(x = .fitted, y = .stdresid)) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth(method = "lm") +
geom_hline(yintercept = 2, color = "red") +
geom_hline(yintercept = -2, color = "red") +
xlab('Предсказанное значение') +
ylab('Стандартизованные остатки')
av_inter_model
av_inter_model
av_inter_model$`F value`
av_inter_model$`F value`
av_inter_model$`Pr(>F)`
av_inter_model$Df
av_inter_model$Df
av_inter_model$`F value`[3]
av_inter_model$Df
r av_inter_model$Df[4]
av_inter_model$Df
av_inter_model$Df[4]
av_inter_model
drug_data$Condition <- as.factor(paste(drug_data$gender, drug_data$drug_type, sep = '_'))
inter_fit <- lm(days_in_hospital ~ Condition - 1, data = drug_data)
res_tukey <- glht(inter_fit, linfct = mcp(Condition = 'Tukey'))
summary(res_tukey)
data = expand.grid(gender = levels(drug_data$gender),
drug_type = levels(drug_data$drug_type))
data
data <-  expand.grid(gender = levels(drug_data$gender),
drug_type = levels(drug_data$drug_type))
data <- data.frame(data,
predict(inter_model, newdata = data, interval = 'confidence'))
pos <- position_dodge(width = 0.2)
gg_linep <- ggplot(data, aes(x = drug_type, y = fit,
ymin = lwr, ymax = upr,
color = gender)) +
geom_point(position = pos) +
geom_errorbar(position = pos, width =0.2 )
gg_linep
data$fit
data
ggplot(mod_diag, aes(x = 1:nrow(mod_diag), y = .cooksd)) +
geom_bar(stat = 'identity') +
xlab('Номер наблюдения') +
ylab('Расстояние Кука') +
ggtitle('График расстояний Кука')
ggplot(mod_diag, aes(x = 1:nrow(mod_diag), y = .cooksd)) +
geom_bar(stat = 'identity') +
xlab('Номер наблюдения') +
ylab('Расстояние Кука') +
ggtitle('График расстояний Кука') +
theme(plot.title = element_text(hjust = 0.5))
total <- ggplot(data = drug_data, aes(x = сondition, y = days_in_hospital)) +
geom_linerange(data = drug_data, aes(x = сondition,
ymax = days_in_hospital,
ymin = mean(drug_data$days_in_hospital)),
size = 1,color = "grey",
position = position_jitter(width = 0.1,
seed = 1L)) +
geom_hline(yintercept = mean(drug_data$days_in_hospital)) +
geom_point(position = position_jitter(width = 0.1, seed = 1L)) +
ggtitle("Общая \n изменчивость") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab('Условия') +
ylab('Количество дней в госпитале')
gr_mean <- drug_data %>%
group_by(сondition) %>%
summarise(mean = mean(days_in_hospital))
two_pic <-right_join(x = drug_data, y = gr_mean)
hline <- data.frame(Cond = levels(drug_data$сondition), v = gr_mean$mean)
resid <- ggplot(two_pic, aes(x = сondition, y = days_in_hospital)) +
geom_linerange(aes(x = сondition, ymax = days_in_hospital, ymin = mean),
size = 1, color = "green",
position = position_jitter(width = 0.1, seed = 1L)) +
geom_point(position = position_jitter(width = 0.1, seed = 1L)) +
geom_point(data = hline, aes(Cond, v), shape=95, size=15) +
ggtitle("Случайная \n изменчивость") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab('Условия') +
ylab('Количество дней в госпитале')
factor <- ggplot() +
geom_linerange(data = gr_mean,
aes(x = сondition, ymax = mean, ymin = mean(drug_data$days_in_hospital)),
color = "blue", size = 2) +
geom_point(data = two_pic, aes(x = сondition, y = days_in_hospital),
position = position_jitter(width = 0.1, seed = 1L)) +
geom_point(data = hline, aes(Cond, v), shape=95, size=15) +
geom_hline(yintercept = mean(drug_data$days_in_hospital)) +
ggtitle("Факторная \n изменчивость") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab('Условия') +
ylab('Количество дней в госпитале')
grid.arrange(total, factor, resid, nrow = 1) +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = mod_diag, aes(x = .fitted, y = .stdresid)) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth(method = "lm") +
geom_hline(yintercept = 2, color = "red") +
geom_hline(yintercept = -2, color = "red") +
xlab('Предсказанное значение') +
ylab('Стандартизованные остатки') +
ggtitle('График зависимости остатков модели\nот предсказанного значения') +
theme(plot.title = element_text(hjust = 0.5))
qqPlot(hosp_duration_mod) +
ggtitle('fdsfsdf')
qqPlot(hosp_duration_mod)
shapiro.test(mod_diag$.resid)
?qqPlot
data <-  expand.grid(gender = levels(drug_data$gender),
drug_type = levels(drug_data$drug_type))
data <- data.frame(data,
predict(inter_model, newdata = data, interval = 'confidence'))
pos <- position_dodge(width = 0.2)
gg_linep <- ggplot(data, aes(x = drug_type, y = fit,
ymin = lwr, ymax = upr,
color = gender)) +
geom_point(position = pos) +
geom_errorbar(position = pos, width = 0.2) +
scale_fill_manual(values = c('female' = '#EBECB3',
'male' = '#B3ECDD'),
name = "Пол", labels = c('Женский', 'Мужской')) +
theme(plot.title = element_text(hjust = 0.5)) +
xlab('Тип лекарства') +
ylab('Предсказанное среднее значение') +
ggtitle('Зависимость предсказанного среднего количества дней в госпитале\nот пола и типа лекарства')
gg_linep
data <-  expand.grid(gender = levels(drug_data$gender),
drug_type = levels(drug_data$drug_type))
data <- data.frame(data,
predict(inter_model, newdata = data, interval = 'confidence'))
pos <- position_dodge(width = 0.2)
gg_linep <- ggplot(data, aes(x = drug_type, y = fit,
ymin = lwr, ymax = upr,
color = gender)) +
geom_point(position = pos) +
geom_errorbar(position = pos, width = 0.2) +
scale_color_manual <- (values = c('female' = '#EBECB3',
'male' = '#B3ECDD'),
data <-  expand.grid(gender = levels(drug_data$gender),
drug_type = levels(drug_data$drug_type))
data <- data.frame(data,
predict(inter_model, newdata = data, interval = 'confidence'))
pos <- position_dodge(width = 0.2)
gg_linep <- ggplot(data, aes(x = drug_type, y = fit,
ymin = lwr, ymax = upr,
color = gender)) +
geom_point(position = pos) +
geom_errorbar(position = pos, width = 0.2) +
scale_color_manual(values = c('female' = '#EBECB3',
'male' = '#B3ECDD'),
name = "Пол", labels = c('Женский', 'Мужской')) +
theme(plot.title = element_text(hjust = 0.5)) +
xlab('Тип лекарства') +
ylab('Предсказанное среднее значение') +
ggtitle('Зависимость предсказанного среднего количества дней в госпитале\nот пола и типа лекарства')
gg_linep
data <-  expand.grid(gender = levels(drug_data$gender),
drug_type = levels(drug_data$drug_type))
data <- data.frame(data,
predict(inter_model, newdata = data, interval = 'confidence'))
pos <- position_dodge(width = 0.2)
gg_linep <- ggplot(data, aes(x = drug_type, y = fit,
ymin = lwr, ymax = upr,
color = gender)) +
geom_point(position = pos) +
geom_errorbar(position = pos, width = 0.2) +
scale_color_manual(values = c('female' = 'red',
'male' = 'blue'),
name = "Пол", labels = c('Женский', 'Мужской')) +
theme(plot.title = element_text(hjust = 0.5)) +
xlab('Тип лекарства') +
ylab('Предсказанное среднее значение') +
ggtitle('Зависимость предсказанного среднего количества дней в госпитале\nот пола и типа лекарства')
gg_linep
setwd('/home/danil/bioinf_institute/statistics/projects/BI_Stat_2020/project_mouse/')
knitr::opts_chunk$set(echo = T,
include = T,
warning = F)
mouse_data <- read_xls('Data/Data_Cortex_Nuclear.xls')
library(readxl)
library(ggplot2)
library(dplyr)
library(car)
library(multcomp)
library(GGally)
library(corrplot)
library(ggcorrplot)
library(vegan)
library(factoextra)
library(scatterplot3d)
library(rgl)
library(readxl)
library(ggplot2)
library(dplyr)
library(car)
library(multcomp)
library(GGally)
library(corrplot)
library(ggcorrplot)
library(vegan)
library(factoextra)
library(scatterplot3d)
library(rgl)
theme_set(theme_bw())
mouse_data <- read_xls('Data/Data_Cortex_Nuclear.xls')
str(mouse_data)
knitr::opts_chunk$set(echo = T,
include = T,
warning = F)
if (!require('dplyr')){
install.packages('dplyr')
}
if (!require('ggplot2')){
install.packages('ggplot2')
}
if (!require('ggcorrplot')){
install.packages('ggcorrplot')
}
if (!require('corrplot')){
install.packages('corrplot')
}
if (!require('car')){
install.packages('car')
}
if (!require('GGally')){
install.packages('GGally')
}
if (!require('multcomp')){
install.packages('multcomp')
}
if (!require('readxl')){
install.packages('readxl')
}
if (!require('vegan')){
install.packages('vegan')
}
if (!require('factoextra')){
install.packages('factoextra')
}
if (!require('scatterplot3d')){
install.packages('scatterplot3d')
}
if (!require('rgl')){
install.packages('rgl')
}
library(readxl)
library(ggplot2)
library(dplyr)
library(car)
library(multcomp)
library(GGally)
library(corrplot)
library(ggcorrplot)
library(vegan)
library(factoextra)
library(scatterplot3d)
library(rgl)
theme_set(theme_bw())
mouse_data <- read_xls('Data/Data_Cortex_Nuclear.xls')
str(mouse_data)
make_id <- function(data){
f <- function(x){
list_of_letters <- strsplit(x, '')
under_index <- which(list_of_letters[[1]] == '_')
return(substr(x, 1, under_index - 1))
}
ids <- unlist(lapply(data, f))
return(ids)
}
mouse_data$id <- make_id(mouse_data$MouseID)
knitr::opts_chunk$set(echo = T,
include = T,
warning = F)
if (!require('dplyr')){
install.packages('dplyr')
}
if (!require('ggplot2')){
install.packages('ggplot2')
}
if (!require('ggcorrplot')){
install.packages('ggcorrplot')
}
if (!require('corrplot')){
install.packages('corrplot')
}
if (!require('car')){
install.packages('car')
}
if (!require('GGally')){
install.packages('GGally')
}
if (!require('multcomp')){
install.packages('multcomp')
}
if (!require('readxl')){
install.packages('readxl')
}
if (!require('vegan')){
install.packages('vegan')
}
if (!require('factoextra')){
install.packages('factoextra')
}
if (!require('scatterplot3d')){
install.packages('scatterplot3d')
}
if (!require('rgl')){
install.packages('rgl')
}
library(readxl)
library(ggplot2)
library(dplyr)
library(car)
library(multcomp)
library(GGally)
library(corrplot)
library(ggcorrplot)
library(vegan)
library(factoextra)
library(scatterplot3d)
library(rgl)
theme_set(theme_bw())
mouse_data <- read_xls('Data/Data_Cortex_Nuclear.xls')
str(mouse_data)
make_id <- function(data){
f <- function(x){
list_of_letters <- strsplit(x, '')
under_index <- which(list_of_letters[[1]] == '_')
return(substr(x, 1, under_index - 1))
}
ids <- unlist(lapply(data, f))
return(ids)
}
mouse_data$id <- make_id(mouse_data$MouseID)
mouse_data$Genotype <- as.factor(mouse_data$Genotype)
mouse_data$Treatment <- as.factor(mouse_data$Treatment)
mouse_data$Behavior <- as.factor(mouse_data$Behavior)
mouse_data$class <- as.factor(mouse_data$class)
classes <- levels(mouse_data$class)
class_pivot_count <- mouse_data %>%
group_by(class) %>%
summarise(count = n() / 15)
treat_pivot_count <- mouse_data %>%
group_by(Treatment) %>%
summarise(count = n() / 15)
genotype_pivot_count <- mouse_data %>%
group_by(Genotype) %>%
summarise(count = n() / 15)
behavior_pivot_count <- mouse_data %>%
group_by(Behavior) %>%
summarise(count = n() / 15)
group_distr_col <- function(data, x, y = 'count'){
ggplot(data, aes(x = list(data[x][[1]])[[1]], y = list(data[y][[1]])[[1]])) +
geom_col(fill = '#FDC65E') +
theme(plot.title = element_text(hjust = 0.5)) +
xlab(paste0('Groups based on variable ', x)) +
ylab('Number of mice') +
ggtitle(paste0('Distribution of mice in groups based on variable ', x))
}
group_distr_col(class_pivot_count, 'class')
group_distr_col(behavior_pivot_count, 'Behavior')
group_distr_col(treat_pivot_count, 'Treatment')
group_distr_col(genotype_pivot_count, 'Genotype')
apply(apply(mouse_data, 2, is.na), 2, sum)
table(apply(apply(mouse_data, 2, is.na), 2, sum))
data.frame(apply(apply(mouse_data, 2, is.na), 2, sum))
apply(apply(mouse_data, 2, is.na), 2, sum)
c_CS_m <- mouse_data[mouse_data$class == 'c-CS-m', ][, 2:78]
c_CS_s <- mouse_data[mouse_data$class == 'c-CS-s', ][, 2:78]
c_SC_m <- mouse_data[mouse_data$class == 'c-SC-m', ][, 2:78]
c_SC_s <- mouse_data[mouse_data$class == 'c-SC-s', ][, 2:78]
t_CS_m <- mouse_data[mouse_data$class == 't-CS-m', ][, 2:78]
t_CS_s <- mouse_data[mouse_data$class == 't-CS-s', ][, 2:78]
t_SC_m <- mouse_data[mouse_data$class == 't-SC-m', ][, 2:78]
t_SC_s <- mouse_data[mouse_data$class == 't-SC-s', ][, 2:78]
pivot_na_data <- data.frame(class = classes,
rbind(apply(apply(c_CS_m, 2, is.na), 2, sum),
apply(apply(c_CS_s, 2, is.na), 2, sum),
apply(apply(c_SC_m, 2, is.na), 2, sum),
apply(apply(c_SC_s, 2, is.na), 2, sum),
apply(apply(t_CS_m, 2, is.na), 2, sum),
apply(apply(t_CS_s, 2, is.na), 2, sum),
apply(apply(t_SC_m, 2, is.na), 2, sum)))
c_CS_m <- mouse_data[mouse_data$class == 'c-CS-m', ][, 2:78]
c_CS_s <- mouse_data[mouse_data$class == 'c-CS-s', ][, 2:78]
c_SC_m <- mouse_data[mouse_data$class == 'c-SC-m', ][, 2:78]
c_SC_s <- mouse_data[mouse_data$class == 'c-SC-s', ][, 2:78]
t_CS_m <- mouse_data[mouse_data$class == 't-CS-m', ][, 2:78]
t_CS_s <- mouse_data[mouse_data$class == 't-CS-s', ][, 2:78]
t_SC_m <- mouse_data[mouse_data$class == 't-SC-m', ][, 2:78]
t_SC_s <- mouse_data[mouse_data$class == 't-SC-s', ][, 2:78]
pivot_na_data <- data.frame(class = classes,
rbind(apply(apply(c_CS_m, 2, is.na), 2, sum),
apply(apply(c_CS_s, 2, is.na), 2, sum),
apply(apply(c_SC_m, 2, is.na), 2, sum),
apply(apply(c_SC_s, 2, is.na), 2, sum),
apply(apply(t_CS_m, 2, is.na), 2, sum),
apply(apply(t_CS_s, 2, is.na), 2, sum),
apply(apply(t_SC_m, 2, is.na), 2, sum),))
c_CS_m <- mouse_data[mouse_data$class == 'c-CS-m', ][, 2:78]
c_CS_s <- mouse_data[mouse_data$class == 'c-CS-s', ][, 2:78]
c_SC_m <- mouse_data[mouse_data$class == 'c-SC-m', ][, 2:78]
c_SC_s <- mouse_data[mouse_data$class == 'c-SC-s', ][, 2:78]
t_CS_m <- mouse_data[mouse_data$class == 't-CS-m', ][, 2:78]
t_CS_s <- mouse_data[mouse_data$class == 't-CS-s', ][, 2:78]
t_SC_m <- mouse_data[mouse_data$class == 't-SC-m', ][, 2:78]
t_SC_s <- mouse_data[mouse_data$class == 't-SC-s', ][, 2:78]
pivot_na_data <- data.frame(class = classes,
rbind(apply(apply(c_CS_m, 2, is.na), 2, sum),
apply(apply(c_CS_s, 2, is.na), 2, sum),
apply(apply(c_SC_m, 2, is.na), 2, sum),
apply(apply(c_SC_s, 2, is.na), 2, sum),
apply(apply(t_CS_m, 2, is.na), 2, sum),
apply(apply(t_CS_s, 2, is.na), 2, sum),
apply(apply(t_SC_m, 2, is.na), 2, sum)))
c_CS_m <- mouse_data[mouse_data$class == 'c-CS-m', ][, 2:78]
c_CS_s <- mouse_data[mouse_data$class == 'c-CS-s', ][, 2:78]
c_SC_m <- mouse_data[mouse_data$class == 'c-SC-m', ][, 2:78]
c_SC_s <- mouse_data[mouse_data$class == 'c-SC-s', ][, 2:78]
t_CS_m <- mouse_data[mouse_data$class == 't-CS-m', ][, 2:78]
t_CS_s <- mouse_data[mouse_data$class == 't-CS-s', ][, 2:78]
t_SC_m <- mouse_data[mouse_data$class == 't-SC-m', ][, 2:78]
t_SC_s <- mouse_data[mouse_data$class == 't-SC-s', ][, 2:78]
apply(apply(c_CS_m, 2, is.na)
pivot_na_data <- data.frame(class = classes,
c_CS_m <- mouse_data[mouse_data$class == 'c-CS-m', ][, 2:78]
c_CS_s <- mouse_data[mouse_data$class == 'c-CS-s', ][, 2:78]
c_SC_m <- mouse_data[mouse_data$class == 'c-SC-m', ][, 2:78]
c_SC_s <- mouse_data[mouse_data$class == 'c-SC-s', ][, 2:78]
t_CS_m <- mouse_data[mouse_data$class == 't-CS-m', ][, 2:78]
t_CS_s <- mouse_data[mouse_data$class == 't-CS-s', ][, 2:78]
t_SC_m <- mouse_data[mouse_data$class == 't-SC-m', ][, 2:78]
t_SC_s <- mouse_data[mouse_data$class == 't-SC-s', ][, 2:78]
apply(apply(c_CS_m, 2, is.na), 2, sum)
pivot_na_data <- data.frame(class = classes,
rbind(apply(apply(c_CS_m, 2, is.na), 2, sum),
apply(apply(c_CS_s, 2, is.na), 2, sum),
apply(apply(c_SC_m, 2, is.na), 2, sum),
apply(apply(c_SC_s, 2, is.na), 2, sum),
apply(apply(t_CS_m, 2, is.na), 2, sum),
apply(apply(t_CS_s, 2, is.na), 2, sum),
apply(apply(t_SC_m, 2, is.na), 2, sum)))
c_CS_m <- mouse_data[mouse_data$class == 'c-CS-m', ][, 2:78]
c_CS_s <- mouse_data[mouse_data$class == 'c-CS-s', ][, 2:78]
c_SC_m <- mouse_data[mouse_data$class == 'c-SC-m', ][, 2:78]
c_SC_s <- mouse_data[mouse_data$class == 'c-SC-s', ][, 2:78]
t_CS_m <- mouse_data[mouse_data$class == 't-CS-m', ][, 2:78]
t_CS_s <- mouse_data[mouse_data$class == 't-CS-s', ][, 2:78]
t_SC_m <- mouse_data[mouse_data$class == 't-SC-m', ][, 2:78]
t_SC_s <- mouse_data[mouse_data$class == 't-SC-s', ][, 2:78]
pivot_na_data <- data.frame(class = classes,
rbind(apply(apply(c_CS_m, 2, is.na), 2, sum),
apply(apply(c_CS_s, 2, is.na), 2, sum),
apply(apply(c_SC_m, 2, is.na), 2, sum),
apply(apply(c_SC_s, 2, is.na), 2, sum),
apply(apply(t_CS_m, 2, is.na), 2, sum),
apply(apply(t_CS_s, 2, is.na), 2, sum),
apply(apply(t_SC_m, 2, is.na), 2, sum),
apply(apply(t_SC_s, 2, is.na), 2, sum)))
pivot_na_data
